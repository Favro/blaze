version: 2

# A reusable "run" snippet which is ran before each test to setup the
# environment for user-limits, core-dumps, etc.
run_env_change: &run_env_change
  name: Environment Changes
  command: |
    # Make a place to core dumps to live.
    sudo mkdir -p /tmp/core_dumps
    sudo chmod a+rwx /tmp/core_dumps

    # Bake the locale we expect into the image.
    echo "en_US.UTF-8 UTF-8" | sudo tee /etc/locale.gen
    sudo locale-gen

# A reusable "run" snippet which enables the continued logging of memoryusage
# to a file on disk which can be saved to build artifacts for later analysis.
run_log_mem_use: &run_log_mem_use
  background: true
  name: Setup Memory Logging
  command: |
    # Log memory usage throughout entire build.
    MEMUSELOG=/tmp/memuse.txt /bin/bash -c '\
        while true; do\
          ps -e -o user,%cpu,%mem,rss:10,vsz:10,command:20 \
            --sort=-%mem >> $MEMUSELOG; \
          echo "----------" >> $MEMUSELOG; \
          sleep 1; \
        done'

# This environment is set to every job (and the initial build).
build_machine_environment: &build_machine_environment
  docker:
    - image: meteor/circleci
  environment:
    # This multiplier scales the waitSecs for selftests.
    TIMEOUT_SCALE_FACTOR: 8

    # Retry failed tests additional times.
    METEOR_SELF_TEST_RETRIES: 2

    # These, mostly overlapping, flags ensure that CircleCI is as pretty as
    # possible for a non-interactive environment.  See also: --headless.
    METEOR_HEADLESS: true
    METEOR_PRETTY_OUTPUT: 0

    # In an effort to stop SIGSEGV, this just doesn't bother cleaning up
    # the mess of temp directories that Meteor makes.
    METEOR_SAVE_TMPDIRS: 1

    # Skip these tests on every test run.
    # If needed, for readability this should be a regex wrapped across
    # multiple lines in quotes.
    SELF_TEST_EXCLUDE: "add debugOnly and prodOnly packages"

    # These will be evaled before each command.
    PRE_TEST_COMMANDS: |-
        ulimit -c unlimited; # Set core dump size as Ubuntu 14.04 lacks prlimit.
        ulimit -a # Display all ulimit settings for transparency.

    # This is only to make Meteor self-test not remind us that we can set
    # this argument for self-tests.
    SELF_TEST_TOOL_NODE_FLAGS: " "

    # Variables for load-balancing
    NUM_GROUPS: 11
    RUNNING_AVG_LENGTH: 5

jobs:
  Get Ready:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - checkout
      - run:
          # https://discuss.circleci.com/t/git-submodule-url-isnt-playing-nice-with-the-cache/549/3
          name: Git Submodules.
          command: (git submodule sync && git submodule update --init --recursive) || (rm -fr .git/config .git/modules && git submodule deinit -f . && git submodule update --init --recursive)
      - run:
          name: Meteor clone
          command: git clone --recursive -b devel https://github.com/meteor/meteor.git /tmp/meteor
      - restore_cache:
          keys:
            - v1-dev-bundle-cache-{{ checksum "/tmp/meteor/meteor" }}
            - v1-dev-bundle-cache-
      - restore_cache:
          keys:
            - v2-other-deps-cache-{{ .Branch }}-{{ .Revision }}
            - v2-other-deps-cache-{{ .Branch }}-
      - restore_cache:
          keys: 
            - v1-test-groups-{{ .Branch }}
            - v1-test-groups-
      # Clear dev_bundle/.npm to ensure consistent test runs.
      - run:
          name: Clear npm cache
          command: /tmp/meteor/meteor npm cache clear --force
      - run:
          name: Get Ready
          command: |
            eval $PRE_TEST_COMMANDS;
            /tmp/meteor/meteor --get-ready
          # shouldn't take longer than 20 minutes
          no_output_timeout: 20m
      - persist_to_workspace:
          root: .
          paths: .
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  Tests:
    <<: *build_machine_environment
    steps:
      - run:
          <<: *run_log_mem_use
      - run:
          <<: *run_env_change
      - attach_workspace:
          at: .
      - run:
          name: "Print environment"
          command: printenv
      - run:
          name: "Running Blaze tests"
          command: |
            eval $PRE_TEST_COMMANDS;
            METEOR_COMMAND=/tmp/meteor/meteor tests/test-runner/test-all.sh
          no_output_timeout: 20m
      - store_artifacts:
          path: /tmp/core_dumps
      - store_artifacts:
          path: /tmp/memuse.txt

  # Test the JSDoc declarations which live within this codebase against the
  # Meteor Docs (https://github.com/meteor/docs) repository, where they'll
  # eventually be consumed.  This test aims to provide an early warning of
  # potentially breaking changes, so they aren't discovered when the docs are
  # next updated, which generally occurs during major Meteor version releases
  # (for example, 1.4 to 1.5, 1.5 to 1.6).
  Docs:
    docker:
      # This Node version should match that in the meteor/docs CircleCI config.
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Generating Meteor documentation for JSDoc testing
          command: |
            cd site/
            npm install-test

  Clean Up:
    <<: *build_machine_environment
    steps:
      - attach_workspace:
          at: .
      - save_cache:
          key: v1-dev-bundle-cache-{{ checksum "/tmp/meteor/meteor" }}
          paths:
            - "/tmp/meteor/dev_bundle"
      - save_cache:
          key: v2-other-deps-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".babel-cache"
            - ".meteor"

workflows:
  version: 2
  Build and Test:
    jobs:
      - Docs
      - Get Ready
      - Tests:
          requires:
            - Get Ready
      - Clean Up:
          requires:
            - Tests

#   pre:
#     - git config --global user.name "circleci"
#     - git config --global user.email "circleci@users.noreply.github.com"
#     - git clone --recursive -b devel https://github.com/meteor/meteor.git /tmp/meteor
# dependencies:
#   override:
#     - npm install selenium-webdriver@2.47.0